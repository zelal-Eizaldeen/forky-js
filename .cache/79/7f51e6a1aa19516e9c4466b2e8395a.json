{"id":"src/js/controller.js","dependencies":[{"name":"/Users/zelal/Documents/Zelal/myProjects/JS/restaurantReciepy/package.json","includedInParent":true,"mtime":1613247366388}],"generated":{"js":"// import * as model from './model.js';\n// import { MODAL_CLOSE_SEC } from './config.js';\n// import recipeView from './views/recipeView.js';\n// import searchView from './views/searchView.js';\n// import resultsView from './views/resultsView.js';\n// import paginationView from './views/paginationView.js';\n// import bookmarksView from './views/bookmarksView.js';\n// import addRecipeView from './views/addRecipeView.js';\n// import 'core-js/stable';\n// import 'regenerator-runtime/runtime';\n// import { async } from 'regenerator-runtime';\n// const controlRecipes = async function () {\n//   try {\n//     const id = window.location.hash.slice(1);\n//     if (!id) return;\n//     recipeView.renderSpinner();\n//     // 0) Update results view to mark selected search result\n//     resultsView.update(model.getSearchResultsPage());\n//     // 1) Updating bookmarks view\n//     bookmarksView.update(model.state.bookmarks);\n//     // 2) Loading recipe\n//     await model.loadRecipe(id);\n//     // 3) Rendering recipe\n//     recipeView.render(model.state.recipe);\n//   } catch (err) {\n//     recipeView.renderError();\n//     console.error(err);\n//   }\n// };\n// const controlSearchResults = async function () {\n//   try {\n//     resultsView.renderSpinner();\n//     // 1) Get search query\n//     const query = searchView.getQuery();\n//     if (!query) return;\n//     // 2) Load search results\n//     await model.loadSearchResults(query);\n//     // 3) Render results\n//     resultsView.render(model.getSearchResultsPage());\n//     // 4) Render initial pagination buttons\n//     paginationView.render(model.state.search);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n// const controlPagination = function (goToPage) {\n//   // 1) Render NEW results\n//   resultsView.render(model.getSearchResultsPage(goToPage));\n//   // 2) Render NEW pagination buttons\n//   paginationView.render(model.state.search);\n// };\n// const controlServings = function (newServings) {\n//   // Update the recipe servings (in state)\n//   model.updateServings(newServings);\n//   // Update the recipe view\n//   recipeView.update(model.state.recipe);\n// };\n// const controlAddBookmark = function () {\n//   // 1) Add/remove bookmark\n//   if (!model.state.recipe.bookmarked) model.addBookmark(model.state.recipe);\n//   else model.deleteBookmark(model.state.recipe.id);\n//   // 2) Update recipe view\n//   recipeView.update(model.state.recipe);\n//   // 3) Render bookmarks\n//   bookmarksView.render(model.state.bookmarks);\n// };\n// const controlBookmarks = function () {\n//   bookmarksView.render(model.state.bookmarks);\n// };\n// const controlAddRecipe = async function (newRecipe) {\n//   try {\n//     // Show loading spinner\n//     addRecipeView.renderSpinner();\n//     // Upload the new recipe data\n//     await model.uploadRecipe(newRecipe);\n//     console.log(model.state.recipe);\n//     // Render recipe\n//     recipeView.render(model.state.recipe);\n//     // Success message\n//     addRecipeView.renderMessage();\n//     // Render bookmark view\n//     bookmarksView.render(model.state.bookmarks);\n//     // Change ID in URL\n//     window.history.pushState(null, '', `#${model.state.recipe.id}`);\n//     // Close form window\n//     setTimeout(function () {\n//       addRecipeView.toggleWindow();\n//     }, MODAL_CLOSE_SEC * 1000);\n//   } catch (err) {\n//     console.error('ðŸ’¥', err);\n//     addRecipeView.renderError(err.message);\n//   }\n// };\n// const init = function () {\n//   bookmarksView.addHandlerRender(controlBookmarks);\n//   recipeView.addHandlerRender(controlRecipes);\n//   recipeView.addHandlerUpdateServings(controlServings);\n//   recipeView.addHandlerAddBookmark(controlAddBookmark);\n//   searchView.addHandlerSearch(controlSearchResults);\n//   paginationView.addHandlerClick(controlPagination);\n//   addRecipeView.addHandlerUpload(controlAddRecipe);\n// };\n// init();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"src/js/controller.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"src/js/controller.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"src/js/controller.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"src/js/controller.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"src/js/controller.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"src/js/controller.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"src/js/controller.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"src/js/controller.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"src/js/controller.js","original":{"line":10,"column":0}},{"generated":{"line":10,"column":0},"source":"src/js/controller.js","original":{"line":11,"column":0}},{"generated":{"line":11,"column":0},"source":"src/js/controller.js","original":{"line":12,"column":0}},{"generated":{"line":12,"column":0},"source":"src/js/controller.js","original":{"line":14,"column":0}},{"generated":{"line":13,"column":0},"source":"src/js/controller.js","original":{"line":15,"column":0}},{"generated":{"line":14,"column":0},"source":"src/js/controller.js","original":{"line":16,"column":0}},{"generated":{"line":15,"column":0},"source":"src/js/controller.js","original":{"line":18,"column":0}},{"generated":{"line":16,"column":0},"source":"src/js/controller.js","original":{"line":19,"column":0}},{"generated":{"line":17,"column":0},"source":"src/js/controller.js","original":{"line":21,"column":0}},{"generated":{"line":18,"column":0},"source":"src/js/controller.js","original":{"line":22,"column":0}},{"generated":{"line":19,"column":0},"source":"src/js/controller.js","original":{"line":24,"column":0}},{"generated":{"line":20,"column":0},"source":"src/js/controller.js","original":{"line":25,"column":0}},{"generated":{"line":21,"column":0},"source":"src/js/controller.js","original":{"line":27,"column":0}},{"generated":{"line":22,"column":0},"source":"src/js/controller.js","original":{"line":28,"column":0}},{"generated":{"line":23,"column":0},"source":"src/js/controller.js","original":{"line":30,"column":0}},{"generated":{"line":24,"column":0},"source":"src/js/controller.js","original":{"line":31,"column":0}},{"generated":{"line":25,"column":0},"source":"src/js/controller.js","original":{"line":32,"column":0}},{"generated":{"line":26,"column":0},"source":"src/js/controller.js","original":{"line":33,"column":0}},{"generated":{"line":27,"column":0},"source":"src/js/controller.js","original":{"line":34,"column":0}},{"generated":{"line":28,"column":0},"source":"src/js/controller.js","original":{"line":35,"column":0}},{"generated":{"line":29,"column":0},"source":"src/js/controller.js","original":{"line":36,"column":0}},{"generated":{"line":30,"column":0},"source":"src/js/controller.js","original":{"line":38,"column":0}},{"generated":{"line":31,"column":0},"source":"src/js/controller.js","original":{"line":39,"column":0}},{"generated":{"line":32,"column":0},"source":"src/js/controller.js","original":{"line":40,"column":0}},{"generated":{"line":33,"column":0},"source":"src/js/controller.js","original":{"line":42,"column":0}},{"generated":{"line":34,"column":0},"source":"src/js/controller.js","original":{"line":43,"column":0}},{"generated":{"line":35,"column":0},"source":"src/js/controller.js","original":{"line":44,"column":0}},{"generated":{"line":36,"column":0},"source":"src/js/controller.js","original":{"line":46,"column":0}},{"generated":{"line":37,"column":0},"source":"src/js/controller.js","original":{"line":47,"column":0}},{"generated":{"line":38,"column":0},"source":"src/js/controller.js","original":{"line":49,"column":0}},{"generated":{"line":39,"column":0},"source":"src/js/controller.js","original":{"line":50,"column":0}},{"generated":{"line":40,"column":0},"source":"src/js/controller.js","original":{"line":52,"column":0}},{"generated":{"line":41,"column":0},"source":"src/js/controller.js","original":{"line":53,"column":0}},{"generated":{"line":42,"column":0},"source":"src/js/controller.js","original":{"line":54,"column":0}},{"generated":{"line":43,"column":0},"source":"src/js/controller.js","original":{"line":55,"column":0}},{"generated":{"line":44,"column":0},"source":"src/js/controller.js","original":{"line":56,"column":0}},{"generated":{"line":45,"column":0},"source":"src/js/controller.js","original":{"line":57,"column":0}},{"generated":{"line":46,"column":0},"source":"src/js/controller.js","original":{"line":59,"column":0}},{"generated":{"line":47,"column":0},"source":"src/js/controller.js","original":{"line":60,"column":0}},{"generated":{"line":48,"column":0},"source":"src/js/controller.js","original":{"line":61,"column":0}},{"generated":{"line":49,"column":0},"source":"src/js/controller.js","original":{"line":63,"column":0}},{"generated":{"line":50,"column":0},"source":"src/js/controller.js","original":{"line":64,"column":0}},{"generated":{"line":51,"column":0},"source":"src/js/controller.js","original":{"line":65,"column":0}},{"generated":{"line":52,"column":0},"source":"src/js/controller.js","original":{"line":67,"column":0}},{"generated":{"line":53,"column":0},"source":"src/js/controller.js","original":{"line":68,"column":0}},{"generated":{"line":54,"column":0},"source":"src/js/controller.js","original":{"line":69,"column":0}},{"generated":{"line":55,"column":0},"source":"src/js/controller.js","original":{"line":71,"column":0}},{"generated":{"line":56,"column":0},"source":"src/js/controller.js","original":{"line":72,"column":0}},{"generated":{"line":57,"column":0},"source":"src/js/controller.js","original":{"line":73,"column":0}},{"generated":{"line":58,"column":0},"source":"src/js/controller.js","original":{"line":75,"column":0}},{"generated":{"line":59,"column":0},"source":"src/js/controller.js","original":{"line":76,"column":0}},{"generated":{"line":60,"column":0},"source":"src/js/controller.js","original":{"line":77,"column":0}},{"generated":{"line":61,"column":0},"source":"src/js/controller.js","original":{"line":78,"column":0}},{"generated":{"line":62,"column":0},"source":"src/js/controller.js","original":{"line":80,"column":0}},{"generated":{"line":63,"column":0},"source":"src/js/controller.js","original":{"line":81,"column":0}},{"generated":{"line":64,"column":0},"source":"src/js/controller.js","original":{"line":83,"column":0}},{"generated":{"line":65,"column":0},"source":"src/js/controller.js","original":{"line":84,"column":0}},{"generated":{"line":66,"column":0},"source":"src/js/controller.js","original":{"line":85,"column":0}},{"generated":{"line":67,"column":0},"source":"src/js/controller.js","original":{"line":87,"column":0}},{"generated":{"line":68,"column":0},"source":"src/js/controller.js","original":{"line":88,"column":0}},{"generated":{"line":69,"column":0},"source":"src/js/controller.js","original":{"line":89,"column":0}},{"generated":{"line":70,"column":0},"source":"src/js/controller.js","original":{"line":91,"column":0}},{"generated":{"line":71,"column":0},"source":"src/js/controller.js","original":{"line":92,"column":0}},{"generated":{"line":72,"column":0},"source":"src/js/controller.js","original":{"line":93,"column":0}},{"generated":{"line":73,"column":0},"source":"src/js/controller.js","original":{"line":94,"column":0}},{"generated":{"line":74,"column":0},"source":"src/js/controller.js","original":{"line":96,"column":0}},{"generated":{"line":75,"column":0},"source":"src/js/controller.js","original":{"line":97,"column":0}},{"generated":{"line":76,"column":0},"source":"src/js/controller.js","original":{"line":98,"column":0}},{"generated":{"line":77,"column":0},"source":"src/js/controller.js","original":{"line":100,"column":0}},{"generated":{"line":78,"column":0},"source":"src/js/controller.js","original":{"line":101,"column":0}},{"generated":{"line":79,"column":0},"source":"src/js/controller.js","original":{"line":103,"column":0}},{"generated":{"line":80,"column":0},"source":"src/js/controller.js","original":{"line":104,"column":0}},{"generated":{"line":81,"column":0},"source":"src/js/controller.js","original":{"line":106,"column":0}},{"generated":{"line":82,"column":0},"source":"src/js/controller.js","original":{"line":107,"column":0}},{"generated":{"line":83,"column":0},"source":"src/js/controller.js","original":{"line":109,"column":0}},{"generated":{"line":84,"column":0},"source":"src/js/controller.js","original":{"line":110,"column":0}},{"generated":{"line":85,"column":0},"source":"src/js/controller.js","original":{"line":112,"column":0}},{"generated":{"line":86,"column":0},"source":"src/js/controller.js","original":{"line":113,"column":0}},{"generated":{"line":87,"column":0},"source":"src/js/controller.js","original":{"line":114,"column":0}},{"generated":{"line":88,"column":0},"source":"src/js/controller.js","original":{"line":115,"column":0}},{"generated":{"line":89,"column":0},"source":"src/js/controller.js","original":{"line":116,"column":0}},{"generated":{"line":90,"column":0},"source":"src/js/controller.js","original":{"line":117,"column":0}},{"generated":{"line":91,"column":0},"source":"src/js/controller.js","original":{"line":118,"column":0}},{"generated":{"line":92,"column":0},"source":"src/js/controller.js","original":{"line":119,"column":0}},{"generated":{"line":93,"column":0},"source":"src/js/controller.js","original":{"line":120,"column":0}},{"generated":{"line":94,"column":0},"source":"src/js/controller.js","original":{"line":122,"column":0}},{"generated":{"line":95,"column":0},"source":"src/js/controller.js","original":{"line":123,"column":0}},{"generated":{"line":96,"column":0},"source":"src/js/controller.js","original":{"line":124,"column":0}},{"generated":{"line":97,"column":0},"source":"src/js/controller.js","original":{"line":125,"column":0}},{"generated":{"line":98,"column":0},"source":"src/js/controller.js","original":{"line":126,"column":0}},{"generated":{"line":99,"column":0},"source":"src/js/controller.js","original":{"line":127,"column":0}},{"generated":{"line":100,"column":0},"source":"src/js/controller.js","original":{"line":128,"column":0}},{"generated":{"line":101,"column":0},"source":"src/js/controller.js","original":{"line":129,"column":0}},{"generated":{"line":102,"column":0},"source":"src/js/controller.js","original":{"line":130,"column":0}},{"generated":{"line":103,"column":0},"source":"src/js/controller.js","original":{"line":131,"column":0}}],"sources":{"src/js/controller.js":"// import * as model from './model.js';\n// import { MODAL_CLOSE_SEC } from './config.js';\n// import recipeView from './views/recipeView.js';\n// import searchView from './views/searchView.js';\n// import resultsView from './views/resultsView.js';\n// import paginationView from './views/paginationView.js';\n// import bookmarksView from './views/bookmarksView.js';\n// import addRecipeView from './views/addRecipeView.js';\n\n// import 'core-js/stable';\n// import 'regenerator-runtime/runtime';\n// import { async } from 'regenerator-runtime';\n\n// const controlRecipes = async function () {\n//   try {\n//     const id = window.location.hash.slice(1);\n\n//     if (!id) return;\n//     recipeView.renderSpinner();\n\n//     // 0) Update results view to mark selected search result\n//     resultsView.update(model.getSearchResultsPage());\n\n//     // 1) Updating bookmarks view\n//     bookmarksView.update(model.state.bookmarks);\n\n//     // 2) Loading recipe\n//     await model.loadRecipe(id);\n\n//     // 3) Rendering recipe\n//     recipeView.render(model.state.recipe);\n//   } catch (err) {\n//     recipeView.renderError();\n//     console.error(err);\n//   }\n// };\n\n// const controlSearchResults = async function () {\n//   try {\n//     resultsView.renderSpinner();\n\n//     // 1) Get search query\n//     const query = searchView.getQuery();\n//     if (!query) return;\n\n//     // 2) Load search results\n//     await model.loadSearchResults(query);\n\n//     // 3) Render results\n//     resultsView.render(model.getSearchResultsPage());\n\n//     // 4) Render initial pagination buttons\n//     paginationView.render(model.state.search);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n// const controlPagination = function (goToPage) {\n//   // 1) Render NEW results\n//   resultsView.render(model.getSearchResultsPage(goToPage));\n\n//   // 2) Render NEW pagination buttons\n//   paginationView.render(model.state.search);\n// };\n\n// const controlServings = function (newServings) {\n//   // Update the recipe servings (in state)\n//   model.updateServings(newServings);\n\n//   // Update the recipe view\n//   recipeView.update(model.state.recipe);\n// };\n\n// const controlAddBookmark = function () {\n//   // 1) Add/remove bookmark\n//   if (!model.state.recipe.bookmarked) model.addBookmark(model.state.recipe);\n//   else model.deleteBookmark(model.state.recipe.id);\n\n//   // 2) Update recipe view\n//   recipeView.update(model.state.recipe);\n\n//   // 3) Render bookmarks\n//   bookmarksView.render(model.state.bookmarks);\n// };\n\n// const controlBookmarks = function () {\n//   bookmarksView.render(model.state.bookmarks);\n// };\n\n// const controlAddRecipe = async function (newRecipe) {\n//   try {\n//     // Show loading spinner\n//     addRecipeView.renderSpinner();\n\n//     // Upload the new recipe data\n//     await model.uploadRecipe(newRecipe);\n//     console.log(model.state.recipe);\n\n//     // Render recipe\n//     recipeView.render(model.state.recipe);\n\n//     // Success message\n//     addRecipeView.renderMessage();\n\n//     // Render bookmark view\n//     bookmarksView.render(model.state.bookmarks);\n\n//     // Change ID in URL\n//     window.history.pushState(null, '', `#${model.state.recipe.id}`);\n\n//     // Close form window\n//     setTimeout(function () {\n//       addRecipeView.toggleWindow();\n//     }, MODAL_CLOSE_SEC * 1000);\n//   } catch (err) {\n//     console.error('ðŸ’¥', err);\n//     addRecipeView.renderError(err.message);\n//   }\n// };\n\n// const init = function () {\n//   bookmarksView.addHandlerRender(controlBookmarks);\n//   recipeView.addHandlerRender(controlRecipes);\n//   recipeView.addHandlerUpdateServings(controlServings);\n//   recipeView.addHandlerAddBookmark(controlAddBookmark);\n//   searchView.addHandlerSearch(controlSearchResults);\n//   paginationView.addHandlerClick(controlPagination);\n//   addRecipeView.addHandlerUpload(controlAddRecipe);\n// };\n// init();\n"},"lineCount":null}},"error":null,"hash":"f90d77ea36cae8457b67c6181451950c","cacheData":{"env":{}}}